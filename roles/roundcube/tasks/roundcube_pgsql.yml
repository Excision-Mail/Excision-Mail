---
- name: create roundcubemail user for postgresql
  postgresql_user:
    name: roundcubemail
    password: "{{ pgsql_password_roundcube }}"

- name: create roundcubemail database
  postgresql_db:
    name: roundcubemail
    encoding: UTF-8
    owner: roundcubemail

- name: get roundcube version from the postgresql database   # noqa ignore-errors
  postgresql_query:
    db: roundcubemail
    login_user: roundcubemail
    login_password: "{{ pgsql_password_roundcube }}"
    as_single_query: true
    query: SELECT value FROM system WHERE name = 'roundcube-version'
  register: __rc_version_output
  ignore_errors: true

- name: initialize the postgresql database
  postgresql_query:
    db: roundcubemail
    path_to_script: /var/www/roundcubemail/SQL/postgres.initial.sql
    login_user: roundcubemail
    login_password: "{{ pgsql_password_roundcube }}"
    as_single_query: true
  when: __rc_version_output.failed

- name: update the postgresql database
  command:
    chdir: /var/www/roundcubemail/bin
    cmd: ./updatedb.sh --dir "../SQL" --package "roundcube"
  changed_when: false

- name: check if persisten_login initialized
  postgresql_query:
    db: roundcubemail
    login_user: roundcubemail
    login_password: "{{ pgsql_password_roundcube }}"
    as_single_query: true
    query: SELECT EXISTS ( SELECT table_name FROM information_schema.tables WHERE table_name = 'auth_tokens' )
  register: __rc_persistent_login

- name: add table for persistent_login   # noqa ignore-errors
  postgresql_query:
    db: roundcubemail
    path_to_script: /var/www/roundcubemail/plugins/persistent_login/sql/postgres.sql
    login_user: roundcubemail
    login_password: "{{ pgsql_password_roundcube }}"
    as_single_query: true
  ignore_errors: true
  when: not __rc_persistent_login.query_result[0]["exists"]
